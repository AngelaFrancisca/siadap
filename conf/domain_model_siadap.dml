package module.siadap.domain; 

enum module.siadap.domain.scoring.SiadapObjectivesEvaluation as SiadapObjectivesEvaluation;
enum module.siadap.domain.scoring.SiadapCompetencesEvaluation as SiadapCompetencesEvaluation;
enum module.siadap.domain.scoring.SiadapGlobalEvaluation as SiadapGlobalEvaluation;
enum module.siadap.domain.SiadapEvaluationObjectivesType as SiadapEvaluationObjectivesType;
enum module.siadap.domain.ExceddingQuotaSuggestionType as ExceddingQuotaSuggestionType;
enum module.siadap.domain.SiadapProcessStateEnum as SiadapProcessStateEnum;
enum module.siadap.domain.SiadapUniverse as SiadapUniverse;

valueType java.math.BigDecimal as BigDecimal {
    externalizeWith {
        String toString();
    }
}


class SiadapRootModule {
	Integer number;
}



class SiadapProcess extends .module.workflow.domain.WorkflowProcess {
}

class groups.SiadapScheduleEditorsGroup extends .myorg.domain.groups.PersistentGroup {
}

class groups.SiadapRevertStateGroup extends .myorg.domain.groups.PersistentGroup {
}

class groups.SiadapCCAGroup extends .myorg.domain.groups.PersistentGroup {
}

class groups.SiadapStructureManagementGroup extends .myorg.domain.groups.PersistentGroup {
}

class SiadapYearConfiguration {
	int year;
	Double objectivesPonderation;
	Double competencesPonderation;
	LocalDate objectiveSpecificationBegin;
	LocalDate objectiveSpecificationEnd;	
	LocalDate autoEvaluationBegin;
	LocalDate autoEvaluationEnd;
	LocalDate evaluationBegin;
	LocalDate evaluationEnd;
	Boolean lockHarmonizationOnQuota;
}

class Siadap {
	Integer year;
	Integer currentObjectiveVersion;
	Boolean evaluatedOnlyByCompetences;
	
	/* sealedDate should be replaced by submittedDate... 
	anyway... it was already in production... let's stick with the term */
	LocalDate objectivesAndCompetencesSealedDate;
	LocalDate autoEvaluationSealedDate;
	LocalDate evaluationSealedDate;
	
	LocalDate requestedAcknowledgeDate;
	LocalDate harmonizationDate;
	LocalDate acknowledgeValidationDate;
	LocalDate homologationDate;
	LocalDate acknowledgeHomologationDate;
	
	Boolean validated;
	
	/* custom dates for exceptional reasons */
	
	LocalDate customObjectiveSpecificationBegin;
	LocalDate customObjectiveSpecificationEnd;	
	
	LocalDate customAutoEvaluationBegin;
	LocalDate customAutoEvaluationEnd;
	
	LocalDate customEvaluationBegin;
	LocalDate customEvaluationEnd;
	
	SiadapUniverse siadapUniverse;
}


class SiadapEvaluation {
	String evaluationJustification;	
	String noEvaluationJustification;
	Boolean excellencyAward;
	String personalDevelopment;
	String trainningNeeds;
}

class SiadapAutoEvaluation {
	String objectivesJustification;
	String competencesJustification;
	String otherFactorsJustification;
	String extremesJustification;
	String commentsAndProposals;
	
	Integer factorOneClassification;
	Integer factorTwoClassification;
	Integer factorThreeClassification;
	Integer factorFourClassification;
	Integer factorFiveClassification;
	Integer factorSixClassification;
	
}

class SiadapEvaluationItem {
	DateTime whenCreated;	
	LocalDate acknowledgeDate;
}

class ObjectiveEvaluation extends SiadapEvaluationItem {
	String objective;	
	String justificationForModification;
	Integer fromVersion;
	Integer untilVersion;
	SiadapEvaluationObjectivesType type;
}

class ObjectiveEvaluationIndicator {
	String measurementIndicator;
	String superationCriteria;
	BigDecimal ponderationFactor;
	SiadapObjectivesEvaluation autoEvaluation;
	SiadapObjectivesEvaluation evaluation;
}

class CompetenceEvaluation extends SiadapEvaluationItem {
	SiadapCompetencesEvaluation autoEvaluation;
	SiadapCompetencesEvaluation evaluation;
}

class Competence {
	Integer number;
	String name;
	String description;
}

class CompetenceType {
	String name;
}

class ExcedingQuotaProposal {
	ExceddingQuotaSuggestionType suggestionType;
	Integer proposalOrder;
}

relation SiadapModuleRootMyOrg {
	.myorg.domain.MyOrg playsRole myOrg;
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapRootModuleSiadapScheduleEditorsGroup {
	SiadapRootModule playsRole siadapRootModule;
	groups.SiadapScheduleEditorsGroup playsRole siadapScheduleEditorsGroup;
}

relation SiadapRootModuleSiadapRevertStateGroup {
	SiadapRootModule playsRole siadapRootModule;
	groups.SiadapRevertStateGroup playsRole siadapRevertStateGroup;
}

relation SiadapRootModuleStatisticsAccessUnionGroup {
	SiadapRootModule playsRole siadapRootModule;
	 .myorg.domain.groups.UnionGroup playsRole statisticsAccessUnionGroup;
}

relation SiadapRootModuleSiadapCCAGroup {
	SiadapRootModule playsRole siadapRootModule;
	groups.SiadapCCAGroup playsRole siadapCCAGroup;
}

relation SiadapRootModuleSiadapStructureManagementGroup {
	SiadapRootModule playsRole siadapRootModule;
	groups.SiadapStructureManagementGroup playsRole siadapStructureManagementGroup;
}

relation SiadapRootModuleSiadap {
	Siadap playsRole siadaps {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapRootModuleSiadapEvaluationItem {
	SiadapEvaluationItem playsRole evaluationItems {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapRootModuleCompetence {
	Competence playsRole competences {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapRootModuleCompetenceType {
	CompetenceType playsRole competenceTypes {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapRootModuleSiadapAutoEvaluation {
	SiadapAutoEvaluation playsRole autoEvaluations {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapRootModuleSiadapEvaluation {
	SiadapEvaluation playsRole evaluations {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}

relation SiadapProcessSiadap {
	SiadapProcess playsRole process;
	Siadap playsRole siadap;
}
 relation SiadapSiadapEvaluationItems {
 	Siadap playsRole siadap;
 	SiadapEvaluationItem playsRole siadapEvaluationItems {
  		multiplicity *;
 	}
}


relation SiadapAutoEvaluationSiadap {
	Siadap playsRole siadap;
	SiadapAutoEvaluation playsRole autoEvaluationData;
}

relation SiadapSiadapEvaluation {
	Siadap playsRole siadap;
	SiadapEvaluation playsRole evaluationData;
}

relation SiadapEvaluated {
	.module.organization.domain.Person playsRole evaluated;
	Siadap playsRole siadapsAsEvaluated {
		multiplicity *;
	}
}

relation CompetenceEvaluationCompetence {
	CompetenceEvaluation playsRole competenceEvaluation {
		multiplicity *;
	}
	Competence playsRole competence;
}

relation CompetenceCompentenceType {
	CompetenceType playsRole competenceType;
	Competence playsRole competences {
		multiplicity *;
	}	
}

relation SiadapYearConfigurationSiadap {
	SiadapYearConfiguration playsRole siadapYearConfiguration {
		multiplicity 0..1;
	}
	Siadap playsRole siadaps {
		multiplicity *;
	}
}

relation SiadapYearConfigurationSiadapStructureManagementGroupInstance {
	SiadapYearConfiguration playsRole siadapYearConfiguration;
	groups.SiadapStructureManagementGroup playsRole siadapStructureManagementGroup;
	
}

relation SiadapYearConfigurationSiadapRootModule {
	SiadapRootModule playsRole siadapRootModule;
	SiadapYearConfiguration playsRole yearConfigurations {
		multiplicity *;
	}
}	


relation UnitRelationsAccountabilityType {
	SiadapYearConfiguration playsRole yearConfigurationsForUnitRelations {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole unitRelations;
}

relation HarmonizationAccountabilityType {
	SiadapYearConfiguration playsRole yearConfigurationsForHarmonizationRelations {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole harmonizationResponsibleRelation;
}

relation WorkingAccountabilityType {
	SiadapYearConfiguration playsRole yearConfigurationsForWorkingRelations {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole workingRelation;
}

relation WorkingAccountabilityWithNoQuotaType {
	SiadapYearConfiguration playsRole yearConfigurationsForWorkingRelationsWithNoQuota {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole workingRelationWithNoQuota;
}


relation EvaluationAccountabilityType {
	SiadapYearConfiguration playsRole yearConfigurationsForEvaluationRelations {
		multiplicity *;
	}
	.module.organization.domain.AccountabilityType playsRole evaluationRelation;
}

relation SiadapTopUnit {
	SiadapYearConfiguration playsRole yearConfigurationsForTopUnit {
		multiplicity *;
	}
	.module.organization.domain.Unit playsRole siadapStructureTopUnit;
}

relation HarmonizationForUnitIsTerminated {
	SiadapYearConfiguration playsRole yearConfigurationForClosedUnits;
	.module.organization.domain.Unit playsRole harmonizationClosedUnits {
		multiplicity *;
	}
}

relation SiadapYearConfigurationCCAMembers {
	SiadapYearConfiguration playsRole siadapYearConfigurationForCCAMembers;
	.module.organization.domain.Person playsRole ccaMembers {
		multiplicity *;
	}
}

relation SiadapYearConfigurationSiadapStructureManagementGroup {
	SiadapYearConfiguration playsRole siadapYearConfiguration;
	.module.organization.domain.Person playsRole structureManagementGroupMembers {
		multiplicity *;
	}
}

relation SiadapYearConfigurationScheduleEditorsMembers {
	SiadapYearConfiguration playsRole siadapYearConfigurationForScheduleEditors;
	.module.organization.domain.Person playsRole scheduleEditors {
		multiplicity *;
	}
}


relation SiadapYearConfigurationRevertStateMembers {
	SiadapYearConfiguration playsRole siadapYearConfigurationForRevertStateGroupMember;
	.module.organization.domain.Person playsRole revertStateGroupMember {
		multiplicity *;
	}
}

relation HomologationMembers {
	SiadapYearConfiguration playsRole siadapYearConfigurationForHomologationMembers;
	.module.organization.domain.Person playsRole homologationMembers {
		multiplicity *;
	}
}

relation ObjectiveEvaluationObjectiveEvaluationIndicator {
	ObjectiveEvaluation playsRole objectiveEvaluation;
	ObjectiveEvaluationIndicator playsRole indicators {
		multiplicity *;
	}
}

/* Used to keep track of the old objects and for the moment only useful
 * to list the objects in the same position. But it might be useful in the 
 * future to have the relation between the several objects that until
 * now wasn't being saved */
relation ObjectiveEvaluationObjectiveEvaluation {
	ObjectiveEvaluation playsRole oldObjectiveEvaluation;
	ObjectiveEvaluation playsRole newObjectiveEvaluation;
}

relation ObjectiveEvaluationIndicatorSiadapRootModule {
	SiadapRootModule playsRole siadapRootModule;
	ObjectiveEvaluationIndicator playsRole indicators {
		multiplicity *;
	}
}	

relation ExcedingQuotaProposalSiadapYearConfiguration {
	ExcedingQuotaProposal playsRole excedingQuotasProposals {
		multiplicity *;
	}
	SiadapYearConfiguration playsRole yearConfiguration;
}

relation ExcedingQuotaProposalPerson {
	ExcedingQuotaProposal playsRole excedingQuotasProposals {
		multiplicity *;
	}
	.module.organization.domain.Person playsRole suggestion;
}

relation ExcedingQuotaProposalUnit {
	ExcedingQuotaProposal playsRole excedingQuotasProposals {
		multiplicity *;
	}
	.module.organization.domain.Unit playsRole unit;
}

relation ExcedingQuotaProposalRootModule {
	ExcedingQuotaProposal playsRole excedingQuotasProposals {
		multiplicity *;
	}
	SiadapRootModule playsRole siadapRootModule;
}


